List the commands for adding, updating, and deleting data.

INSERT INTO shoppingList (id, name, price, location) VALUES (1, 'Ginderbred cookies', 5.0, 'Wholefoods' )

INSERT INTO shoppingList VALUES (2, 'Christmas Tree', 100.0, 'HomeDepot');

UPDATE shoppingList SET price = 80.0 WHERE id = 2;

UPDATE shoppingList SET price = 80.0 WHERE id = 2 AND name = 'Christmas Tree';

DELETE FROM shoppingList WHERE id = 2;

DELETE FROM shoppingList WHERE id = 2 AND name = 'Christmas Tree';

ALTER TABLE shoppingList ADD COLUMN date date;

ALTER TABLE shoppingList DROP COLUMN date;

DROP TABLE shoppingList;


2. Explain the structure for each type of command.

Adding: when adding values to the table, you use INSERT INTO and VALUES command

    ex. INSERT INTO table (column names) VALUES (value1, value2, value3);INSERT INTO table VALUES (value1, value2, value3);

- when adding columns to the table, use ALTER TABLE table name ADD COLUMN column name, data type

    ex. ALTER TABLE table ADD COLUMN column name, data type

Updating: when updating values in the table, use UPDATE table name SET values and WHERE specify values

    ex. UPDATE table VALUES (value1, value2, value3) WHERE value1 = 1001; UPDATE table VALUES (value1m value2, value3) WHERE value1 = 1001 AND value2 = 'Christmas Tree';

Deleting: when deleting rows, use DELETE FROM table name WHERE specify values

    ex. DELETE FROM table WHERE id = 2;

- when deleting columns, use ALTER TABLE table name DROP COLUMN column name

    ex. ALTER TABLE table DROP COLUMN column name;

- when deleting tables, use DROP TABLE table name

    ex. DROP TABLE shoppingList

What are some of the data types that can be used in tables? Give a real-world example of each type.
-INTEGER (a whole number), REAL (floating point number), and TEXT (a string of text). When a column isn't storing any value, it is a NULL value.

    ex. CREATE TABLE friends (
    id INTEGER PRIMARY KEY,
    name TEXT,
    age INTEGER,
    weight REAL);
    INSERT INTO friends VALUES (1, "Jacela", 32, 165.5);
    INSERT INTO friends VALUES (2, "Foxly", 30, 152.4);
    INSERT INTO friends VALUES (3, "Pumpkin", NULL, NULL);
    SELECT * FROM friends;

Decide how to create a new table to hold a list of people invited to a wedding dinner. The table needs to have first and last names, whether they sent in their RSVP, the number of guests they are bringing, and the number of meals (1 for adults and 1/2 for children).
Which data type would you use to store each of the following pieces of information?

 -First and last name- text
  Whether they sent in their RSVP- boolean
  Number of guests-integer
  Number of meals-integer

Write a command that creates the table to track the wedding dinner.
Write a command that adds a column to track whether the guest sent a thank you card.
You have decided to move the data about the meals to another table, so write a command to remove the column storing the number meals from the wedding table.
The guests will need a place to sit at the reception, so write a command that adds a column for table number.
The wedding is over and we do not need to keep this information, so write a command that deletes the table numbers from the database.

  -CREATE TABLE wedding (first text, last text, RVSP bool, guest int, meal int);
  ALTER TABLE dinner ADD COLUMN card BOOLEAN;
  ALTER TABLE dinner DROP COLUMN meals;
  ALTER TABLE dinner ADD COLUMN tablenum INT;
  ALTER TABLE dinner DROP COLUMN tablenum;

Write a command to create a new table to hold the books in a library with the columns ISBN, title, author, genre, publishing date, number of copies, and available copies.
Find three books and add their information to the table.
Someone has just checked out one of the books. Change the number of available copies to 1 fewer.
Now one of the books has been added to the banned books list. Remove it from the table.

-CREATE TABLE library (isbn int, author text, genre text, publishing_date date, number_copies int, available_copy int, title text);
INSERT INTO library
    VALUES
    ('9780735219090','Delia Owens','Fiction','2018-08-14',5, 1,  'Where the Crawdads Sing'),
    ('9788417444365','Michelle Obama','Autobiography','2018-11-13',5, 1, 'Becoming'),
    ('9781607747307', 'Marie Kondo','Nonfiction','2014-10-04', 5,5,'The Life-Changing Magic of Tidying Up');
 UPDATE library SET available_copy = 4 WHERE isbn ='9781607747307;
 DELETE FROM library WHERE isbn = '9780735219090';

Write a command to make a new table to hold spacecrafts. Information should include id, name, year launched, country of origin, a brief description of the mission, orbiting body, if it is currently operating, and its approximate miles from Earth. In addition to the table creation, provide commands that perform the following operations:
Add three non-Earth-orbiting satellites to the table.
Remove one of the satellites from the table since it has just crashed into the planet.
Edit another satellite because it is no longer operating and change the value to reflect that.

-CREATE TABLE spacecrafts (id int, name text, year_launched int, country_of_origin text, description text, orbiting_body text, currently_operating bool, miles_from_Earth numeric(10,2))
INSERT INTO spacecrafts
   VALUES
   (1001, 'Sakigake', 1985, 'Japan','First interplanetary spacecraft from Japan','Sun',True, 4340000),
   (1002, 'Stardust', 1996, 'USA','Collect dust from the space','Comet',True, 147),
   (1003, 'Helios', 1975, 'USA','Study solar process','Sun',False, 60000);
DELETE FROM spacecrafts WHERE id = '1003';
UPDATE FROM spacecrafts WHERE currently_operating = f;

Write a command to create a new table to hold the emails in your inbox. This table should include an id, the subject line, the sender, any additional recipients, the body of the email, the timestamp, whether or not you have read the email, and the id of the email chain it's in. Also provide commands that perform the following operations:
Add three new emails to the inbox.
You deleted one of the emails, so write a command to remove the row from the inbox table.
You started reading an email but just heard a crash in another room. Mark the email as unread before investigating the crash, so you can come back and read it later.

-CREATE TABLE mailbox (id int, subject text, sender text, additional_recipients text, body_of_mail text, timestamp date, read_email bool, id_email_chain int);
INSERT INTO mailbox
    VALUES
    (1, 'Good Morning', 'Sara Kang','David Kang', 'How are you?','2019-02-12', true, 5),
    (2, 'Good Evening', 'David Kang','Sara Kang', 'Doing good. How are you?','2019-02-12', false, 10),
    (3, 'Plan To Meet', 'Sara Kang','David Kang', 'Let''s go on a trip!','2019-02-12', false, 11);
 DELETE FROM mailbox WHERE id = 3;
 UPDATE mailbox SET read_email = false WHERE id = 1;
